"""
Django settings for gdash project.

Generated by 'django-admin startproject' using Django 1.11.20.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

# Imports and module dependencies.
import os
import logging


# Secrets file.
from gdash_root import secrets


# Helper methods.
gettext = lambda s: s


# Base configs.
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print BASE_DIR

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'r-1!lmvk3zdl7v9f)&zo4s#@^ap&tnjkj-)hl%4xeivj8(oao-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []


# Sessions.
# Cookie name. this can be whatever you want
SESSION_COOKIE_NAME = 'sessionid'  # use the sessionid in your views code
# the module to store sessions data
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
# age of cookie in seconds (default: 2 weeks)
SESSION_COOKIE_AGE = 24*60*60*7  # the number of seconds for only 7 for example
# whether a user's session cookie expires when the web browser is closed
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
# whether the session cookie should be secure (https:// only)
SESSION_COOKIE_SECURE = False


# Application definition.
INSTALLED_APPS = [
    # Django Built-in Modules.
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sessions.middleware',
    'django.contrib.sitemaps',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Example Apps.
    'gdash_root.apps.GdashConfig',
    'simpleview.apps.SimpleviewConfig',
    'polls.apps.PollsConfig',
    'ajaxtest.apps.AjaxtestConfig',
    'embedded.apps.EmbeddedConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gdash_root.urls'
WSGI_APPLICATION = secrets._WSGI_APPLICATION
GATEWAY_NAMESPACE = secrets._GATEWAY_NAMESPACE

# Templates.
# https://docs.djangoproject.com/en/2.2/topics/templates/
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR, 'templates') ],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.i18n',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                # 'django.template.context_processors.media',
                # 'django.template.context_processors.csrf',
                # 'django.template.context_processors.tz',
                'django.template.context_processors.static',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
                'django.template.loaders.eggs.Loader'
            ],
            'libraries':{
                # TBD.
            }
        },
    },
]


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# POSTGRESQL.
DATABASES = {
    'default': {
        'ENGINE': secrets._DJANGO_DB_ENGINE,
        'NAME': secrets._DJANGO_DB_NAME,
        'USER': secrets._DJANGO_DB_USER,
        'PASSWORD': secrets._DJANGO_DB_PASSWORD,
        'HOST': secrets._DJANGO_DB_HOST,
        'PORT': secrets._DJANGO_DB_PORT
    }
}


# Fixtures.
# https://docs.djangoproject.com/en/1.11/howto/initial-data/
FIXTURE_DIRS = [
    os.path.join(BASE_DIR, 'fixtures'),
]


# Authentication & Password validation.
# AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']

# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

IMPERSONATE_REQUIRE_SUPERUSER = True

LOGIN_REDIRECT_URL = getattr(secrets, '_LOGIN_REDIRECT_URL', '/')

# Static files (CSS, JavaScript, Images).
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, '../static')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    # '/var/www/static/',
]

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]


# Media files.
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, '../media')


# Internationalization.
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGE_CODE = 'en'   # 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

LANGUAGES = (
    ('en', gettext('en')),
)


# Logging./
logger = logging.getLogger(__file__)


# Google Analytics.
GOOGLE_ANALYTICS_PROPERTY_ID = secrets._GOOGLE_ANALYTICS_PROPERTY_ID
GOOGLE_ANALYTICS_PRELOAD = secrets._GOOGLE_ANALYTICS_PRELOAD


# Exported settings.
SETTINGS_EXPORT = [
    'DEBUG',
    'GOOGLE_ANALYTICS_PRELOAD',
    'GOOGLE_ANALYTICS_PROPERTY_ID',
    'GATEWAY_NAMESPACE'
]
